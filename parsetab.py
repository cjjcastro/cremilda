
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '9D257B031BA29D2F19AD2E88D483FF95'
    
_lr_action_items = {'NAME':([0,6,7,8,15,16,17,20,21,29,30,33,34,45,52,54,56,58,60,66,68,],[5,5,10,31,10,10,10,10,10,10,44,10,10,31,10,10,10,10,10,10,44,]),'$end':([1,6,9,],[0,-29,-30,]),'SEMICOLON_':([2,3,4,10,11,12,13,14,18,19,22,23,24,25,26,27,28,35,36,37,40,47,48,51,53,55,59,64,69,],[6,-34,-35,-6,-39,-17,-11,-13,-36,-37,-1,-2,-3,-4,-5,-7,-8,-14,-15,-16,-27,-12,-20,-38,-28,-33,-21,-22,-23,]),'EQUAL_':([5,46,],[7,58,]),'LPAREN_':([5,7,10,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,33,34,35,36,37,39,40,47,48,51,52,53,54,55,56,58,59,60,66,],[8,20,-6,34,20,20,20,-36,-37,20,20,-1,-2,-3,-4,-5,-7,-8,20,20,20,34,34,34,34,-27,34,-20,-38,20,-28,20,-33,20,20,-21,20,20,]),'PLUS_':([7,20,29,34,52,54,56,58,60,66,],[15,15,15,15,15,15,15,15,15,15,]),'MINUS_':([7,20,29,34,52,54,56,58,60,66,],[16,16,16,16,16,16,16,16,16,16,]),'NOT_':([7,20,29,34,52,54,56,58,60,66,],[17,17,17,17,17,17,17,17,17,17,]),'IF_':([7,20,29,34,52,54,56,58,60,66,],[21,21,21,21,21,21,21,21,21,21,]),'NUMBER':([7,15,16,17,20,21,29,33,34,52,54,56,58,60,66,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'STRING':([7,15,16,17,20,21,29,33,34,52,54,56,58,60,66,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'TRUE':([7,15,16,17,20,21,29,33,34,52,54,56,58,60,66,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'FALSE':([7,15,16,17,20,21,29,33,34,52,54,56,58,60,66,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'TYPENAME':([7,15,16,17,20,21,29,33,34,52,54,56,58,60,66,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'TK_SYMB_12_':([7,15,16,17,20,21,29,33,34,52,54,56,58,60,66,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'LBRACE_':([7,15,16,17,20,21,29,33,34,52,54,56,58,60,66,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'OP':([10,13,18,19,22,23,24,25,26,27,28,40,48,51,53,55,59,],[-6,33,-36,-37,-1,-2,-3,-4,-5,-7,-8,-27,-20,-38,-28,-33,-21,]),'RPAREN_':([10,12,13,14,18,19,22,23,24,25,26,27,28,31,32,34,35,36,37,38,40,47,48,49,50,51,53,55,57,59,65,69,],[-6,-17,-11,-13,-36,-37,-1,-2,-3,-4,-5,-7,-8,-9,46,48,-14,-15,-16,51,-27,-12,-20,59,-18,-38,-28,-33,-10,-21,-19,-23,]),'COMMA_':([10,13,14,18,19,22,23,24,25,26,27,28,31,35,36,37,40,42,47,48,50,51,53,55,59,62,63,67,69,],[-6,-11,-13,-36,-37,-1,-2,-3,-4,-5,-7,-8,45,-14,-15,-16,-27,54,-12,-20,60,-38,-28,-33,-21,67,68,-26,-23,]),'TK_SYMB_13_':([10,13,14,18,19,22,23,24,25,26,27,28,29,35,36,37,40,41,42,47,48,51,53,55,59,62,67,69,],[-6,-11,-13,-36,-37,-1,-2,-3,-4,-5,-7,-8,40,-14,-15,-16,-27,53,-24,-12,-20,-38,-28,-33,-21,-25,-26,-23,]),'ELSE_':([10,13,14,18,19,22,23,24,25,26,27,28,35,36,37,40,47,48,51,53,55,59,61,69,],[-6,-11,-13,-36,-37,-1,-2,-3,-4,-5,-7,-8,-14,-15,-16,-27,-12,-20,-38,-28,-33,-21,66,-23,]),'RBRACE_':([10,13,14,18,19,22,23,24,25,26,27,28,35,36,37,40,43,47,48,51,53,55,59,63,69,70,],[-6,-11,-13,-36,-37,-1,-2,-3,-4,-5,-7,-8,-14,-15,-16,-27,55,-12,-20,-38,-28,-33,-21,-31,-23,-32,]),'THEN_':([10,18,19,22,23,24,25,26,27,28,39,40,48,51,53,55,59,],[-6,-36,-37,-1,-2,-3,-4,-5,-7,-8,52,-27,-20,-38,-28,-33,-21,]),'COLON_':([44,],[56,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'module':([0,6,],[1,9,]),'statement':([0,6,],[2,2,]),'vardef':([0,6,],[3,3,]),'fundef':([0,6,],[4,4,]),'expr':([7,20,58,],[11,38,64,]),'elem':([7,20,29,34,52,54,56,58,60,66,],[12,12,42,50,61,42,63,12,50,69,]),'value':([7,15,16,17,20,21,29,33,34,52,54,56,58,60,66,],[13,35,36,37,13,39,13,47,13,13,13,13,13,13,13,]),'ifexpr':([7,20,29,34,52,54,56,58,60,66,],[14,14,14,14,14,14,14,14,14,14,]),'atom':([7,15,16,17,20,21,29,33,34,52,54,56,58,60,66,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'fcall':([7,15,16,17,20,21,29,33,34,52,54,56,58,60,66,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'list':([7,15,16,17,20,21,29,33,34,52,54,56,58,60,66,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'record':([7,15,16,17,20,21,29,33,34,52,54,56,58,60,66,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'defargs':([8,45,],[32,57,]),'items':([29,54,],[41,62,]),'objvalue':([30,68,],[43,70,]),'fargs':([34,60,],[49,65,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('atom -> NUMBER','atom',1,'p_atom_1','ply.py',126),
  ('atom -> STRING','atom',1,'p_atom_2','ply.py',126),
  ('atom -> TRUE','atom',1,'p_atom_3','ply.py',126),
  ('atom -> FALSE','atom',1,'p_atom_4','ply.py',126),
  ('atom -> TYPENAME','atom',1,'p_atom_5','ply.py',126),
  ('atom -> NAME','atom',1,'p_atom_6','ply.py',126),
  ('atom -> list','atom',1,'p_atom_7','ply.py',126),
  ('atom -> record','atom',1,'p_atom_8','ply.py',126),
  ('defargs -> NAME','defargs',1,'p_defargs_1','ply.py',126),
  ('defargs -> NAME COMMA_ defargs','defargs',3,'p_defargs_2','ply.py',126),
  ('elem -> value','elem',1,'p_elem_1','ply.py',126),
  ('elem -> value OP value','elem',3,'p_elem_2','ply.py',126),
  ('elem -> ifexpr','elem',1,'p_elem_3','ply.py',126),
  ('elem -> PLUS_ value','elem',2,'p_elem_4','ply.py',126),
  ('elem -> MINUS_ value','elem',2,'p_elem_5','ply.py',126),
  ('elem -> NOT_ value','elem',2,'p_elem_6','ply.py',126),
  ('expr -> elem','expr',1,'p_expr_1','ply.py',126),
  ('fargs -> elem','fargs',1,'p_fargs_1','ply.py',126),
  ('fargs -> elem COMMA_ fargs','fargs',3,'p_fargs_2','ply.py',126),
  ('fcall -> value LPAREN_ RPAREN_','fcall',3,'p_fcall_1','ply.py',126),
  ('fcall -> value LPAREN_ fargs RPAREN_','fcall',4,'p_fcall_2','ply.py',126),
  ('fundef -> NAME LPAREN_ defargs RPAREN_ EQUAL_ expr','fundef',6,'p_fundef_1','ply.py',126),
  ('ifexpr -> IF_ value THEN_ elem ELSE_ elem','ifexpr',6,'p_ifexpr_1','ply.py',126),
  ('items -> elem','items',1,'p_items_1','ply.py',126),
  ('items -> elem COMMA_ items','items',3,'p_items_2','ply.py',126),
  ('items -> elem COMMA_ items COMMA_','items',4,'p_items_3','ply.py',126),
  ('list -> TK_SYMB_12_ TK_SYMB_13_','list',2,'p_list_1','ply.py',126),
  ('list -> TK_SYMB_12_ items TK_SYMB_13_','list',3,'p_list_2','ply.py',126),
  ('module -> statement SEMICOLON_','module',2,'p_module_1','ply.py',126),
  ('module -> statement SEMICOLON_ module','module',3,'p_module_2','ply.py',126),
  ('objvalue -> NAME COLON_ elem','objvalue',3,'p_objvalue_1','ply.py',126),
  ('objvalue -> NAME COLON_ elem COMMA_ objvalue','objvalue',5,'p_objvalue_2','ply.py',126),
  ('record -> LBRACE_ objvalue RBRACE_','record',3,'p_record_1','ply.py',126),
  ('statement -> vardef','statement',1,'p_statement_1','ply.py',126),
  ('statement -> fundef','statement',1,'p_statement_2','ply.py',126),
  ('value -> atom','value',1,'p_value_1','ply.py',126),
  ('value -> fcall','value',1,'p_value_2','ply.py',126),
  ('value -> LPAREN_ expr RPAREN_','value',3,'p_value_3','ply.py',126),
  ('vardef -> NAME EQUAL_ expr','vardef',3,'p_vardef_1','ply.py',126),
]
